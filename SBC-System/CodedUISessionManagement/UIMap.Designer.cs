// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUISessionManagement
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// checkDate - Use 'checkDateExpectedValues' to pass parameters into this method.
        /// </summary>
        public void checkDate()
        {
            #region Variable Declarations
            WinCell uIItem08032017Cell = this.UIFindStaffWindow.UIDataGridViewX1Window.UIDataGridViewTable.UIRow0Row.UIItem08032017Cell;
            #endregion

            // Verify that the 'FriendlyName' property of '08/03/2017' cell matches '08/03/2017'
            StringAssert.Matches(uIItem08032017Cell.FriendlyName, new Regex(this.checkDateExpectedValues.UIItem08032017CellFriendlyName));
        }
        
        /// <summary>
        /// checkErrorUpdate - Use 'checkErrorUpdateExpectedValues' to pass parameters into this method.
        /// </summary>
        public void checkErrorUpdate()
        {
            #region Variable Declarations
            WinText uIUnexpectederrorTheUPText = this.UIUnexpectederrorTheUPWindow.UIUnexpectederrorTheUPText;
            #endregion

            // Verify that the 'DisplayText' property of 'Unexpected error:The UPDATE statement conflicted w...' label contains 'Unexpected error'
            StringAssert.Contains(uIUnexpectederrorTheUPText.DisplayText, this.checkErrorUpdateExpectedValues.UIUnexpectederrorTheUPTextDisplayText);
        }
        
        /// <summary>
        /// checkMessageBoxUpdate - Use 'checkMessageBoxUpdateExpectedValues' to pass parameters into this method.
        /// </summary>
        public void checkMessageBoxUpdate()
        {
            #region Variable Declarations
            WinTitleBar uISaveRecordTitleBar = this.UISaveRecordWindow.UISaveRecordTitleBar;
            #endregion

            // Verify that the 'DisplayText' property of 'Save Record' title bar matches 'Save Record'
            StringAssert.Matches(uISaveRecordTitleBar.DisplayText, new Regex(this.checkMessageBoxUpdateExpectedValues.UISaveRecordTitleBarDisplayText));
        }
        
        /// <summary>
        /// checkSavedUpdate - Use 'checkSavedUpdateExpectedValues' to pass parameters into this method.
        /// </summary>
        public void checkSavedUpdate()
        {
            #region Variable Declarations
            WinText uIRecordSavedText = this.UIRecordSavedWindow.UIRecordSavedText;
            #endregion

            // Verify that the 'DisplayText' property of 'Record Saved' label matches 'Record Saved'
            StringAssert.Matches(uIRecordSavedText.DisplayText, new Regex(this.checkSavedUpdateExpectedValues.UIRecordSavedTextDisplayText));
        }
        
        /// <summary>
        /// checkSessionID - Use 'checkSessionIDExpectedValues' to pass parameters into this method.
        /// </summary>
        public void checkSessionID()
        {
            #region Variable Declarations
            WinEdit uITxtSearchBoxEdit = this.UIUpdateSessionWindow.UITxtSearchBoxWindow.UITxtSearchBoxEdit;
            #endregion

            // Verify that the 'Text' property of 'txtSearchBox' text box matches '3'
            StringAssert.Matches(uITxtSearchBoxEdit.Text, new Regex(this.checkSessionIDExpectedValues.UITxtSearchBoxEditText));
        }
        
        /// <summary>
        /// checkStaff - Use 'checkStaffExpectedValues' to pass parameters into this method.
        /// </summary>
        public void checkStaff()
        {
            #region Variable Declarations
            WinEdit uITxtStaffIDEdit = this.UIUpdateSessionWindow.UITxtStaffIDWindow.UITxtStaffIDEdit;
            #endregion

            // Verify that the 'Text' property of 'txtStaffID' text box matches '2'
            StringAssert.Matches(uITxtStaffIDEdit.Text, new Regex(this.checkStaffExpectedValues.UITxtStaffIDEditText));
        }
        
        /// <summary>
        /// checkStaffID - Use 'checkStaffIDExpectedValues' to pass parameters into this method.
        /// </summary>
        public void checkStaffID()
        {
            #region Variable Declarations
            WinText uIItem2Text = this.UIFindStaffWindow.UIItem2Window.UIItem2Text;
            #endregion

            // Verify that the 'DisplayText' property of '2' label matches '2'
            StringAssert.Matches(uIItem2Text.DisplayText, new Regex(this.checkStaffIDExpectedValues.UIItem2TextDisplayText));
        }
        
        /// <summary>
        /// checkStaffIDAv - Use 'checkStaffIDAvExpectedValues' to pass parameters into this method.
        /// </summary>
        public void checkStaffIDAv()
        {
            #region Variable Declarations
            WinEdit uITxtSearchBoxEdit = this.UIFindStaffWindow.UITxtSearchBoxWindow.UITxtSearchBoxEdit;
            #endregion

            // Verify that the 'Text' property of 'txtSearchBox' text box matches '2'
            StringAssert.Matches(uITxtSearchBoxEdit.Text, new Regex(this.checkStaffIDAvExpectedValues.UITxtSearchBoxEditText));
        }
        
        /// <summary>
        /// checkStaffIDCarry - Use 'checkStaffIDCarryExpectedValues' to pass parameters into this method.
        /// </summary>
        public void checkStaffIDCarry()
        {
            #region Variable Declarations
            WinEdit uITxtStaffIDEdit = this.UIUpdateSessionWindow.UITxtStaffIDWindow.UITxtStaffIDEdit;
            #endregion

            // Verify that the 'Text' property of 'txtStaffID' text box matches '2'
            StringAssert.Matches(uITxtStaffIDEdit.Text, new Regex(this.checkStaffIDCarryExpectedValues.UITxtStaffIDEditText));
        }
        
        /// <summary>
        /// checkStaffLastName - Use 'checkStaffLastNameExpectedValues' to pass parameters into this method.
        /// </summary>
        public void checkStaffLastName()
        {
            #region Variable Declarations
            WinEdit uITxtLastNameEdit = this.UIFindStaffWindow.UITxtLastNameWindow.UITxtLastNameEdit;
            #endregion

            // Verify that the 'Text' property of 'txtLastName' text box matches 'starling'
            StringAssert.Matches(uITxtLastNameEdit.Text, new Regex(this.checkStaffLastNameExpectedValues.UITxtLastNameEditText));
        }
        
        /// <summary>
        /// checkStaffName - Use 'checkStaffNameExpectedValues' to pass parameters into this method.
        /// </summary>
        public void checkStaffName()
        {
            #region Variable Declarations
            WinEdit uITxtFirstNameEdit = this.UIFindStaffWindow.UITxtFirstNameWindow.UITxtFirstNameEdit;
            #endregion

            // Verify that the 'Text' property of 'txtFirstName' text box matches 'thomas'
            StringAssert.Matches(uITxtFirstNameEdit.Text, new Regex(this.checkStaffNameExpectedValues.UITxtFirstNameEditText));
        }
        
        /// <summary>
        /// RecordedCheckStaffIDCarry - Use 'RecordedCheckStaffIDCarryParams' to pass parameters into this method.
        /// </summary>
        public void RecordedCheckStaffIDCarry()
        {
            #region Variable Declarations
            WinEdit uITxtStaffIDEdit = this.UIUpdateSessionWindow.UITxtStaffIDWindow.UITxtStaffIDEdit;
            #endregion

            // Type '2' in 'txtStaffID' text box
            uITxtStaffIDEdit.Text = this.RecordedCheckStaffIDCarryParams.UITxtStaffIDEditText;
        }
        
        /// <summary>
        /// RecordedFilterStaff - Use 'RecordedFilterStaffParams' to pass parameters into this method.
        /// </summary>
        public void RecordedFilterStaff()
        {
            #region Variable Declarations
            WinButton uISearchButton = this.UIFindStaffWindow.UISearchAvailabilityGroup.UISearchButton;
            WinComboBox uIItem2ComboBox = this.UIFindStaffWindow.UIComboBox1Window.UIItem2ComboBox;
            WinButton uIApplyButton = this.UIFindStaffWindow.UIFilterOptionsGroup.UIApplyButton;
            #endregion

            // Click 'Search' button
            Mouse.Click(uISearchButton, new Point(22, 6));

            // Select 'Wednesday' in '2' combo box
            uIItem2ComboBox.SelectedItem = this.RecordedFilterStaffParams.UIItem2ComboBoxSelectedItem;

            // Click 'Apply' button
            Mouse.Click(uIApplyButton, new Point(120, 18));
        }
        
        /// <summary>
        /// RecordedSearchStaff - Use 'RecordedSearchStaffParams' to pass parameters into this method.
        /// </summary>
        public void RecordedSearchStaff()
        {
            #region Variable Declarations
            WinButton uIBtnFindStaffButton = this.UIUpdateSessionWindow.UIUpdateSessionClient.UIBtnFindStaffButton;
            WinEdit uITxtFirstNameEdit = this.UIFindStaffWindow.UITxtFirstNameWindow.UITxtFirstNameEdit;
            WinEdit uITxtLastNameEdit = this.UIFindStaffWindow.UITxtLastNameWindow.UITxtLastNameEdit;
            WinButton uISearchButton = this.UIFindStaffWindow.UISearchStaffGroup.UISearchButton;
            #endregion

            // Click 'btnFindStaff' button
            Mouse.Click(uIBtnFindStaffButton, new Point(19, 14));

            // Type 'thomas' in 'txtFirstName' text box
            uITxtFirstNameEdit.Text = this.RecordedSearchStaffParams.UITxtFirstNameEditText;

            // Type '{Tab}' in 'txtFirstName' text box
            Keyboard.SendKeys(uITxtFirstNameEdit, this.RecordedSearchStaffParams.UITxtFirstNameEditSendKeys, ModifierKeys.None);

            // Type 'starling' in 'txtLastName' text box
            uITxtLastNameEdit.Text = this.RecordedSearchStaffParams.UITxtLastNameEditText;

            // Click 'Search' button
            Mouse.Click(uISearchButton, new Point(115, 8));
        }
        
        /// <summary>
        /// RecordedUpdateSession - Use 'RecordedUpdateSessionParams' to pass parameters into this method.
        /// </summary>
        public void RecordedUpdateSession()
        {
            #region Variable Declarations
            WinEdit uITxtSearchBoxEdit = this.UIUpdateSessionWindow.UITxtSearchBoxWindow.UITxtSearchBoxEdit;
            WinEdit uITxtStaffIDEdit = this.UIUpdateSessionWindow.UITxtStaffIDWindow.UITxtStaffIDEdit;
            WinButton uISearchButton = this.UIUpdateSessionWindow.UIEnterSessionIDClient.UISearchButton;
            WinComboBox uIComboBoxSlopeComboBox = this.UIUpdateSessionWindow.UIComboBoxSlopeWindow.UIComboBoxSlopeComboBox;
            WinDateTimePicker uIDateTimePicker1DateTimePicker = this.UIUpdateSessionWindow.UIDateTimePicker1Window.UIDateTimePicker1DateTimePicker;
            WinComboBox uIComboBoxEx1ComboBox = this.UIUpdateSessionWindow.UIComboBoxEx1Window.UIComboBoxEx1ComboBox;
            WinComboBox uIComboBoxEx2ComboBox = this.UIUpdateSessionWindow.UIComboBoxEx2Window.UIComboBoxEx2ComboBox;
            WinButton uISubmitButton = this.UIUpdateSessionWindow.UIUpdateSessionClient.UISubmitButton;
            WinButton uIYesButton = this.UISaveRecordWindow.UIYesWindow.UIYesButton;
            #endregion

            // Type '3' in 'txtSearchBox' text box
            uITxtSearchBoxEdit.Text = this.RecordedUpdateSessionParams.UITxtSearchBoxEditText;

            // Type '2' in 'txtStaffID' text box
            uITxtStaffIDEdit.Text = this.RecordedUpdateSessionParams.UITxtStaffIDEditText;

            // Click 'Search' button
            Mouse.Click(uISearchButton, new Point(29, 8));

            // Select '3' in 'comboBoxSlope' combo box
            uIComboBoxSlopeComboBox.SelectedItem = this.RecordedUpdateSessionParams.UIComboBoxSlopeComboBoxSelectedItem;

            // Select '02/03/2017' in 'dateTimePicker1' date time picker
            uIDateTimePicker1DateTimePicker.DateTimeAsString = this.RecordedUpdateSessionParams.UIDateTimePicker1DateTimePickerDateTimeAsString;

            // Select '10:00' in 'comboBoxEx1' combo box
            uIComboBoxEx1ComboBox.SelectedItem = this.RecordedUpdateSessionParams.UIComboBoxEx1ComboBoxSelectedItem;

            // Select '15:00' in 'comboBoxEx2' combo box
            uIComboBoxEx2ComboBox.SelectedItem = this.RecordedUpdateSessionParams.UIComboBoxEx2ComboBoxSelectedItem;

            // Click 'Submit' button
            Mouse.Click(uISubmitButton, new Point(131, 16));

            // Click '&Yes' button
            Mouse.Click(uIYesButton, new Point(48, 8));
        }
        
        #region Properties
        public virtual checkDateExpectedValues checkDateExpectedValues
        {
            get
            {
                if ((this.mcheckDateExpectedValues == null))
                {
                    this.mcheckDateExpectedValues = new checkDateExpectedValues();
                }
                return this.mcheckDateExpectedValues;
            }
        }
        
        public virtual checkErrorUpdateExpectedValues checkErrorUpdateExpectedValues
        {
            get
            {
                if ((this.mcheckErrorUpdateExpectedValues == null))
                {
                    this.mcheckErrorUpdateExpectedValues = new checkErrorUpdateExpectedValues();
                }
                return this.mcheckErrorUpdateExpectedValues;
            }
        }
        
        public virtual checkMessageBoxUpdateExpectedValues checkMessageBoxUpdateExpectedValues
        {
            get
            {
                if ((this.mcheckMessageBoxUpdateExpectedValues == null))
                {
                    this.mcheckMessageBoxUpdateExpectedValues = new checkMessageBoxUpdateExpectedValues();
                }
                return this.mcheckMessageBoxUpdateExpectedValues;
            }
        }
        
        public virtual checkSavedUpdateExpectedValues checkSavedUpdateExpectedValues
        {
            get
            {
                if ((this.mcheckSavedUpdateExpectedValues == null))
                {
                    this.mcheckSavedUpdateExpectedValues = new checkSavedUpdateExpectedValues();
                }
                return this.mcheckSavedUpdateExpectedValues;
            }
        }
        
        public virtual checkSessionIDExpectedValues checkSessionIDExpectedValues
        {
            get
            {
                if ((this.mcheckSessionIDExpectedValues == null))
                {
                    this.mcheckSessionIDExpectedValues = new checkSessionIDExpectedValues();
                }
                return this.mcheckSessionIDExpectedValues;
            }
        }
        
        public virtual checkStaffExpectedValues checkStaffExpectedValues
        {
            get
            {
                if ((this.mcheckStaffExpectedValues == null))
                {
                    this.mcheckStaffExpectedValues = new checkStaffExpectedValues();
                }
                return this.mcheckStaffExpectedValues;
            }
        }
        
        public virtual checkStaffIDExpectedValues checkStaffIDExpectedValues
        {
            get
            {
                if ((this.mcheckStaffIDExpectedValues == null))
                {
                    this.mcheckStaffIDExpectedValues = new checkStaffIDExpectedValues();
                }
                return this.mcheckStaffIDExpectedValues;
            }
        }
        
        public virtual checkStaffIDAvExpectedValues checkStaffIDAvExpectedValues
        {
            get
            {
                if ((this.mcheckStaffIDAvExpectedValues == null))
                {
                    this.mcheckStaffIDAvExpectedValues = new checkStaffIDAvExpectedValues();
                }
                return this.mcheckStaffIDAvExpectedValues;
            }
        }
        
        public virtual checkStaffIDCarryExpectedValues checkStaffIDCarryExpectedValues
        {
            get
            {
                if ((this.mcheckStaffIDCarryExpectedValues == null))
                {
                    this.mcheckStaffIDCarryExpectedValues = new checkStaffIDCarryExpectedValues();
                }
                return this.mcheckStaffIDCarryExpectedValues;
            }
        }
        
        public virtual checkStaffLastNameExpectedValues checkStaffLastNameExpectedValues
        {
            get
            {
                if ((this.mcheckStaffLastNameExpectedValues == null))
                {
                    this.mcheckStaffLastNameExpectedValues = new checkStaffLastNameExpectedValues();
                }
                return this.mcheckStaffLastNameExpectedValues;
            }
        }
        
        public virtual checkStaffNameExpectedValues checkStaffNameExpectedValues
        {
            get
            {
                if ((this.mcheckStaffNameExpectedValues == null))
                {
                    this.mcheckStaffNameExpectedValues = new checkStaffNameExpectedValues();
                }
                return this.mcheckStaffNameExpectedValues;
            }
        }
        
        public virtual RecordedCheckStaffIDCarryParams RecordedCheckStaffIDCarryParams
        {
            get
            {
                if ((this.mRecordedCheckStaffIDCarryParams == null))
                {
                    this.mRecordedCheckStaffIDCarryParams = new RecordedCheckStaffIDCarryParams();
                }
                return this.mRecordedCheckStaffIDCarryParams;
            }
        }
        
        public virtual RecordedFilterStaffParams RecordedFilterStaffParams
        {
            get
            {
                if ((this.mRecordedFilterStaffParams == null))
                {
                    this.mRecordedFilterStaffParams = new RecordedFilterStaffParams();
                }
                return this.mRecordedFilterStaffParams;
            }
        }
        
        public virtual RecordedSearchStaffParams RecordedSearchStaffParams
        {
            get
            {
                if ((this.mRecordedSearchStaffParams == null))
                {
                    this.mRecordedSearchStaffParams = new RecordedSearchStaffParams();
                }
                return this.mRecordedSearchStaffParams;
            }
        }
        
        public virtual RecordedUpdateSessionParams RecordedUpdateSessionParams
        {
            get
            {
                if ((this.mRecordedUpdateSessionParams == null))
                {
                    this.mRecordedUpdateSessionParams = new RecordedUpdateSessionParams();
                }
                return this.mRecordedUpdateSessionParams;
            }
        }
        
        public UIUpdateSessionWindow UIUpdateSessionWindow
        {
            get
            {
                if ((this.mUIUpdateSessionWindow == null))
                {
                    this.mUIUpdateSessionWindow = new UIUpdateSessionWindow();
                }
                return this.mUIUpdateSessionWindow;
            }
        }
        
        public UIFindStaffWindow UIFindStaffWindow
        {
            get
            {
                if ((this.mUIFindStaffWindow == null))
                {
                    this.mUIFindStaffWindow = new UIFindStaffWindow();
                }
                return this.mUIFindStaffWindow;
            }
        }
        
        public UIProgramManagerWindow UIProgramManagerWindow
        {
            get
            {
                if ((this.mUIProgramManagerWindow == null))
                {
                    this.mUIProgramManagerWindow = new UIProgramManagerWindow();
                }
                return this.mUIProgramManagerWindow;
            }
        }
        
        public UISaveRecordWindow UISaveRecordWindow
        {
            get
            {
                if ((this.mUISaveRecordWindow == null))
                {
                    this.mUISaveRecordWindow = new UISaveRecordWindow();
                }
                return this.mUISaveRecordWindow;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow();
                }
                return this.mUIOKWindow;
            }
        }
        
        public UIUnexpectederrorTheUPWindow UIUnexpectederrorTheUPWindow
        {
            get
            {
                if ((this.mUIUnexpectederrorTheUPWindow == null))
                {
                    this.mUIUnexpectederrorTheUPWindow = new UIUnexpectederrorTheUPWindow();
                }
                return this.mUIUnexpectederrorTheUPWindow;
            }
        }
        
        public UIRecordSavedWindow UIRecordSavedWindow
        {
            get
            {
                if ((this.mUIRecordSavedWindow == null))
                {
                    this.mUIRecordSavedWindow = new UIRecordSavedWindow();
                }
                return this.mUIRecordSavedWindow;
            }
        }
        #endregion
        
        #region Fields
        private checkDateExpectedValues mcheckDateExpectedValues;
        
        private checkErrorUpdateExpectedValues mcheckErrorUpdateExpectedValues;
        
        private checkMessageBoxUpdateExpectedValues mcheckMessageBoxUpdateExpectedValues;
        
        private checkSavedUpdateExpectedValues mcheckSavedUpdateExpectedValues;
        
        private checkSessionIDExpectedValues mcheckSessionIDExpectedValues;
        
        private checkStaffExpectedValues mcheckStaffExpectedValues;
        
        private checkStaffIDExpectedValues mcheckStaffIDExpectedValues;
        
        private checkStaffIDAvExpectedValues mcheckStaffIDAvExpectedValues;
        
        private checkStaffIDCarryExpectedValues mcheckStaffIDCarryExpectedValues;
        
        private checkStaffLastNameExpectedValues mcheckStaffLastNameExpectedValues;
        
        private checkStaffNameExpectedValues mcheckStaffNameExpectedValues;
        
        private RecordedCheckStaffIDCarryParams mRecordedCheckStaffIDCarryParams;
        
        private RecordedFilterStaffParams mRecordedFilterStaffParams;
        
        private RecordedSearchStaffParams mRecordedSearchStaffParams;
        
        private RecordedUpdateSessionParams mRecordedUpdateSessionParams;
        
        private UIUpdateSessionWindow mUIUpdateSessionWindow;
        
        private UIFindStaffWindow mUIFindStaffWindow;
        
        private UIProgramManagerWindow mUIProgramManagerWindow;
        
        private UISaveRecordWindow mUISaveRecordWindow;
        
        private UIOKWindow mUIOKWindow;
        
        private UIUnexpectederrorTheUPWindow mUIUnexpectederrorTheUPWindow;
        
        private UIRecordSavedWindow mUIRecordSavedWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'checkDate'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class checkDateExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'FriendlyName' property of '08/03/2017' cell matches '08/03/2017'
        /// </summary>
        public string UIItem08032017CellFriendlyName = "08/03/2017";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'checkErrorUpdate'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class checkErrorUpdateExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Unexpected error:The UPDATE statement conflicted w...' label contains 'Unexpected error'
        /// </summary>
        public string UIUnexpectederrorTheUPTextDisplayText = "Unexpected error";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'checkMessageBoxUpdate'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class checkMessageBoxUpdateExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Save Record' title bar matches 'Save Record'
        /// </summary>
        public string UISaveRecordTitleBarDisplayText = "Save Record";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'checkSavedUpdate'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class checkSavedUpdateExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Record Saved' label matches 'Record Saved'
        /// </summary>
        public string UIRecordSavedTextDisplayText = "Record Saved";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'checkSessionID'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class checkSessionIDExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'txtSearchBox' text box matches '3'
        /// </summary>
        public string UITxtSearchBoxEditText = "3";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'checkStaff'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class checkStaffExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'txtStaffID' text box matches '2'
        /// </summary>
        public string UITxtStaffIDEditText = "2";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'checkStaffID'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class checkStaffIDExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of '2' label matches '2'
        /// </summary>
        public string UIItem2TextDisplayText = "2";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'checkStaffIDAv'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class checkStaffIDAvExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'txtSearchBox' text box matches '2'
        /// </summary>
        public string UITxtSearchBoxEditText = "2";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'checkStaffIDCarry'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class checkStaffIDCarryExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'txtStaffID' text box matches '2'
        /// </summary>
        public string UITxtStaffIDEditText = "2";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'checkStaffLastName'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class checkStaffLastNameExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'txtLastName' text box matches 'starling'
        /// </summary>
        public string UITxtLastNameEditText = "starling";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'checkStaffName'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class checkStaffNameExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'txtFirstName' text box matches 'thomas'
        /// </summary>
        public string UITxtFirstNameEditText = "thomas";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedCheckStaffIDCarry'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class RecordedCheckStaffIDCarryParams
    {
        
        #region Fields
        /// <summary>
        /// Type '2' in 'txtStaffID' text box
        /// </summary>
        public string UITxtStaffIDEditText = "2";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedFilterStaff'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class RecordedFilterStaffParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Wednesday' in '2' combo box
        /// </summary>
        public string UIItem2ComboBoxSelectedItem = "Wednesday";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedSearchStaff'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class RecordedSearchStaffParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'thomas' in 'txtFirstName' text box
        /// </summary>
        public string UITxtFirstNameEditText = "thomas";
        
        /// <summary>
        /// Type '{Tab}' in 'txtFirstName' text box
        /// </summary>
        public string UITxtFirstNameEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'starling' in 'txtLastName' text box
        /// </summary>
        public string UITxtLastNameEditText = "starling";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedUpdateSession'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class RecordedUpdateSessionParams
    {
        
        #region Fields
        /// <summary>
        /// Type '3' in 'txtSearchBox' text box
        /// </summary>
        public string UITxtSearchBoxEditText = "3";
        
        /// <summary>
        /// Type '2' in 'txtStaffID' text box
        /// </summary>
        public string UITxtStaffIDEditText = "2";
        
        /// <summary>
        /// Select '3' in 'comboBoxSlope' combo box
        /// </summary>
        public string UIComboBoxSlopeComboBoxSelectedItem = "3";
        
        /// <summary>
        /// Select '02/03/2017' in 'dateTimePicker1' date time picker
        /// </summary>
        public string UIDateTimePicker1DateTimePickerDateTimeAsString = "02-Mar-2017";
        
        /// <summary>
        /// Select '10:00' in 'comboBoxEx1' combo box
        /// </summary>
        public string UIComboBoxEx1ComboBoxSelectedItem = "10:00";
        
        /// <summary>
        /// Select '15:00' in 'comboBoxEx2' combo box
        /// </summary>
        public string UIComboBoxEx2ComboBoxSelectedItem = "15:00";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIUpdateSessionWindow : WinWindow
    {
        
        public UIUpdateSessionWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Update Session";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Update Session");
            #endregion
        }
        
        #region Properties
        public UIUpdateSessionClient UIUpdateSessionClient
        {
            get
            {
                if ((this.mUIUpdateSessionClient == null))
                {
                    this.mUIUpdateSessionClient = new UIUpdateSessionClient(this);
                }
                return this.mUIUpdateSessionClient;
            }
        }
        
        public UITxtStaffIDWindow UITxtStaffIDWindow
        {
            get
            {
                if ((this.mUITxtStaffIDWindow == null))
                {
                    this.mUITxtStaffIDWindow = new UITxtStaffIDWindow(this);
                }
                return this.mUITxtStaffIDWindow;
            }
        }
        
        public UITxtSearchBoxWindow UITxtSearchBoxWindow
        {
            get
            {
                if ((this.mUITxtSearchBoxWindow == null))
                {
                    this.mUITxtSearchBoxWindow = new UITxtSearchBoxWindow(this);
                }
                return this.mUITxtSearchBoxWindow;
            }
        }
        
        public UIComboBoxSlopeWindow UIComboBoxSlopeWindow
        {
            get
            {
                if ((this.mUIComboBoxSlopeWindow == null))
                {
                    this.mUIComboBoxSlopeWindow = new UIComboBoxSlopeWindow(this);
                }
                return this.mUIComboBoxSlopeWindow;
            }
        }
        
        public UIDateTimePicker1Window UIDateTimePicker1Window
        {
            get
            {
                if ((this.mUIDateTimePicker1Window == null))
                {
                    this.mUIDateTimePicker1Window = new UIDateTimePicker1Window(this);
                }
                return this.mUIDateTimePicker1Window;
            }
        }
        
        public UI____Window UI____Window
        {
            get
            {
                if ((this.mUI____Window == null))
                {
                    this.mUI____Window = new UI____Window(this);
                }
                return this.mUI____Window;
            }
        }
        
        public UI____Window1 UI____Window1
        {
            get
            {
                if ((this.mUI____Window1 == null))
                {
                    this.mUI____Window1 = new UI____Window1(this);
                }
                return this.mUI____Window1;
            }
        }
        
        public UIEnterSessionIDWindow UIEnterSessionIDWindow
        {
            get
            {
                if ((this.mUIEnterSessionIDWindow == null))
                {
                    this.mUIEnterSessionIDWindow = new UIEnterSessionIDWindow(this);
                }
                return this.mUIEnterSessionIDWindow;
            }
        }
        
        public UIEnterSessionIDClient UIEnterSessionIDClient
        {
            get
            {
                if ((this.mUIEnterSessionIDClient == null))
                {
                    this.mUIEnterSessionIDClient = new UIEnterSessionIDClient(this);
                }
                return this.mUIEnterSessionIDClient;
            }
        }
        
        public UIUpdateSessionClient1 UIUpdateSessionClient1
        {
            get
            {
                if ((this.mUIUpdateSessionClient1 == null))
                {
                    this.mUIUpdateSessionClient1 = new UIUpdateSessionClient1(this);
                }
                return this.mUIUpdateSessionClient1;
            }
        }
        
        public UIComboBoxEx1Window UIComboBoxEx1Window
        {
            get
            {
                if ((this.mUIComboBoxEx1Window == null))
                {
                    this.mUIComboBoxEx1Window = new UIComboBoxEx1Window(this);
                }
                return this.mUIComboBoxEx1Window;
            }
        }
        
        public UIComboBoxEx2Window UIComboBoxEx2Window
        {
            get
            {
                if ((this.mUIComboBoxEx2Window == null))
                {
                    this.mUIComboBoxEx2Window = new UIComboBoxEx2Window(this);
                }
                return this.mUIComboBoxEx2Window;
            }
        }
        #endregion
        
        #region Fields
        private UIUpdateSessionClient mUIUpdateSessionClient;
        
        private UITxtStaffIDWindow mUITxtStaffIDWindow;
        
        private UITxtSearchBoxWindow mUITxtSearchBoxWindow;
        
        private UIComboBoxSlopeWindow mUIComboBoxSlopeWindow;
        
        private UIDateTimePicker1Window mUIDateTimePicker1Window;
        
        private UI____Window mUI____Window;
        
        private UI____Window1 mUI____Window1;
        
        private UIEnterSessionIDWindow mUIEnterSessionIDWindow;
        
        private UIEnterSessionIDClient mUIEnterSessionIDClient;
        
        private UIUpdateSessionClient1 mUIUpdateSessionClient1;
        
        private UIComboBoxEx1Window mUIComboBoxEx1Window;
        
        private UIComboBoxEx2Window mUIComboBoxEx2Window;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIUpdateSessionClient : WinClient
    {
        
        public UIUpdateSessionClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Update Session";
            this.WindowTitles.Add("Update Session");
            #endregion
        }
        
        #region Properties
        public WinWindow UITxtStaffIDWindow
        {
            get
            {
                if ((this.mUITxtStaffIDWindow == null))
                {
                    this.mUITxtStaffIDWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUITxtStaffIDWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
                    this.mUITxtStaffIDWindow.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
                    this.mUITxtStaffIDWindow.WindowTitles.Add("Update Session");
                    #endregion
                }
                return this.mUITxtStaffIDWindow;
            }
        }
        
        public WinButton UIBtnFindStaffButton
        {
            get
            {
                if ((this.mUIBtnFindStaffButton == null))
                {
                    this.mUIBtnFindStaffButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIBtnFindStaffButton.WindowTitles.Add("Update Session");
                    #endregion
                }
                return this.mUIBtnFindStaffButton;
            }
        }
        
        public WinButton UISubmitButton
        {
            get
            {
                if ((this.mUISubmitButton == null))
                {
                    this.mUISubmitButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISubmitButton.SearchProperties[WinButton.PropertyNames.Name] = "Submit";
                    this.mUISubmitButton.WindowTitles.Add("Update Session");
                    #endregion
                }
                return this.mUISubmitButton;
            }
        }
        
        public WinWindow UIUpdateSessionWindow
        {
            get
            {
                if ((this.mUIUpdateSessionWindow == null))
                {
                    this.mUIUpdateSessionWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUIUpdateSessionWindow.SearchProperties[WinWindow.PropertyNames.Name] = "Update Session";
                    this.mUIUpdateSessionWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
                    this.mUIUpdateSessionWindow.WindowTitles.Add("Update Session");
                    #endregion
                }
                return this.mUIUpdateSessionWindow;
            }
        }
        #endregion
        
        #region Fields
        private WinWindow mUITxtStaffIDWindow;
        
        private WinButton mUIBtnFindStaffButton;
        
        private WinButton mUISubmitButton;
        
        private WinWindow mUIUpdateSessionWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITxtStaffIDWindow : WinWindow
    {
        
        public UITxtStaffIDWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtStaffID";
            this.WindowTitles.Add("Update Session");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtStaffIDEdit
        {
            get
            {
                if ((this.mUITxtStaffIDEdit == null))
                {
                    this.mUITxtStaffIDEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtStaffIDEdit.WindowTitles.Add("Update Session");
                    #endregion
                }
                return this.mUITxtStaffIDEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtStaffIDEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITxtSearchBoxWindow : WinWindow
    {
        
        public UITxtSearchBoxWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtSearchBox";
            this.WindowTitles.Add("Update Session");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtSearchBoxEdit
        {
            get
            {
                if ((this.mUITxtSearchBoxEdit == null))
                {
                    this.mUITxtSearchBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtSearchBoxEdit.WindowTitles.Add("Update Session");
                    #endregion
                }
                return this.mUITxtSearchBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtSearchBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIComboBoxSlopeWindow : WinWindow
    {
        
        public UIComboBoxSlopeWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "comboBoxSlope";
            this.WindowTitles.Add("Update Session");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIComboBoxSlopeComboBox
        {
            get
            {
                if ((this.mUIComboBoxSlopeComboBox == null))
                {
                    this.mUIComboBoxSlopeComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIComboBoxSlopeComboBox.WindowTitles.Add("Update Session");
                    #endregion
                }
                return this.mUIComboBoxSlopeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIComboBoxSlopeComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDateTimePicker1Window : WinWindow
    {
        
        public UIDateTimePicker1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dateTimePicker1";
            this.WindowTitles.Add("Update Session");
            #endregion
        }
        
        #region Properties
        public WinDateTimePicker UIDateTimePicker1DateTimePicker
        {
            get
            {
                if ((this.mUIDateTimePicker1DateTimePicker == null))
                {
                    this.mUIDateTimePicker1DateTimePicker = new WinDateTimePicker(this);
                    #region Search Criteria
                    this.mUIDateTimePicker1DateTimePicker.WindowTitles.Add("Update Session");
                    #endregion
                }
                return this.mUIDateTimePicker1DateTimePicker;
            }
        }
        #endregion
        
        #region Fields
        private WinDateTimePicker mUIDateTimePicker1DateTimePicker;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UI____Window : WinWindow
    {
        
        public UI____Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtStartTime";
            this.WindowTitles.Add("Update Session");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtStartTimeEdit
        {
            get
            {
                if ((this.mUITxtStartTimeEdit == null))
                {
                    this.mUITxtStartTimeEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtStartTimeEdit.WindowTitles.Add("Update Session");
                    #endregion
                }
                return this.mUITxtStartTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtStartTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UI____Window1 : WinWindow
    {
        
        public UI____Window1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtEndTime";
            this.WindowTitles.Add("Update Session");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtEndTimeEdit
        {
            get
            {
                if ((this.mUITxtEndTimeEdit == null))
                {
                    this.mUITxtEndTimeEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtEndTimeEdit.WindowTitles.Add("Update Session");
                    #endregion
                }
                return this.mUITxtEndTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtEndTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIEnterSessionIDWindow : WinWindow
    {
        
        public UIEnterSessionIDWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "groupPanel1";
            this.WindowTitles.Add("Update Session");
            #endregion
        }
        
        #region Properties
        public WinClient UIEnterSessionIDClient
        {
            get
            {
                if ((this.mUIEnterSessionIDClient == null))
                {
                    this.mUIEnterSessionIDClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIEnterSessionIDClient.SearchProperties[WinControl.PropertyNames.Name] = "Enter Session ID:";
                    this.mUIEnterSessionIDClient.WindowTitles.Add("Update Session");
                    #endregion
                }
                return this.mUIEnterSessionIDClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIEnterSessionIDClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIEnterSessionIDClient : WinClient
    {
        
        public UIEnterSessionIDClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Enter Session ID:";
            this.WindowTitles.Add("Update Session");
            #endregion
        }
        
        #region Properties
        public WinButton UISearchButton
        {
            get
            {
                if ((this.mUISearchButton == null))
                {
                    this.mUISearchButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISearchButton.SearchProperties[WinButton.PropertyNames.Name] = "Search";
                    this.mUISearchButton.WindowTitles.Add("Update Session");
                    #endregion
                }
                return this.mUISearchButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISearchButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIUpdateSessionClient1 : WinClient
    {
        
        public UIUpdateSessionClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Update Session";
            this.WindowTitles.Add("Update Session");
            #endregion
        }
        
        #region Properties
        public WinWindow UI____Window
        {
            get
            {
                if ((this.mUI____Window == null))
                {
                    this.mUI____Window = new WinWindow(this);
                    #region Search Criteria
                    this.mUI____Window.SearchProperties[WinWindow.PropertyNames.Name] = "__:__";
                    this.mUI____Window.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
                    this.mUI____Window.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
                    this.mUI____Window.WindowTitles.Add("Update Session");
                    #endregion
                }
                return this.mUI____Window;
            }
        }
        #endregion
        
        #region Fields
        private WinWindow mUI____Window;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIComboBoxEx1Window : WinWindow
    {
        
        public UIComboBoxEx1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "comboBoxEx1";
            this.WindowTitles.Add("Update Session");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIComboBoxEx1ComboBox
        {
            get
            {
                if ((this.mUIComboBoxEx1ComboBox == null))
                {
                    this.mUIComboBoxEx1ComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIComboBoxEx1ComboBox.WindowTitles.Add("Update Session");
                    #endregion
                }
                return this.mUIComboBoxEx1ComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIComboBoxEx1ComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIComboBoxEx2Window : WinWindow
    {
        
        public UIComboBoxEx2Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "comboBoxEx2";
            this.WindowTitles.Add("Update Session");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIComboBoxEx2ComboBox
        {
            get
            {
                if ((this.mUIComboBoxEx2ComboBox == null))
                {
                    this.mUIComboBoxEx2ComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIComboBoxEx2ComboBox.WindowTitles.Add("Update Session");
                    #endregion
                }
                return this.mUIComboBoxEx2ComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIComboBoxEx2ComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIFindStaffWindow : WinWindow
    {
        
        public UIFindStaffWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Find Staff";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Find Staff");
            #endregion
        }
        
        #region Properties
        public UITxtFirstNameWindow UITxtFirstNameWindow
        {
            get
            {
                if ((this.mUITxtFirstNameWindow == null))
                {
                    this.mUITxtFirstNameWindow = new UITxtFirstNameWindow(this);
                }
                return this.mUITxtFirstNameWindow;
            }
        }
        
        public UITxtLastNameWindow UITxtLastNameWindow
        {
            get
            {
                if ((this.mUITxtLastNameWindow == null))
                {
                    this.mUITxtLastNameWindow = new UITxtLastNameWindow(this);
                }
                return this.mUITxtLastNameWindow;
            }
        }
        
        public UIItem2Window UIItem2Window
        {
            get
            {
                if ((this.mUIItem2Window == null))
                {
                    this.mUIItem2Window = new UIItem2Window(this);
                }
                return this.mUIItem2Window;
            }
        }
        
        public UITxtSearchBoxWindow1 UITxtSearchBoxWindow
        {
            get
            {
                if ((this.mUITxtSearchBoxWindow == null))
                {
                    this.mUITxtSearchBoxWindow = new UITxtSearchBoxWindow1(this);
                }
                return this.mUITxtSearchBoxWindow;
            }
        }
        
        public UISearchStaffGroup UISearchStaffGroup
        {
            get
            {
                if ((this.mUISearchStaffGroup == null))
                {
                    this.mUISearchStaffGroup = new UISearchStaffGroup(this);
                }
                return this.mUISearchStaffGroup;
            }
        }
        
        public UIDataGridViewX1Window UIDataGridViewX1Window
        {
            get
            {
                if ((this.mUIDataGridViewX1Window == null))
                {
                    this.mUIDataGridViewX1Window = new UIDataGridViewX1Window(this);
                }
                return this.mUIDataGridViewX1Window;
            }
        }
        
        public UISearchAvailabilityGroup UISearchAvailabilityGroup
        {
            get
            {
                if ((this.mUISearchAvailabilityGroup == null))
                {
                    this.mUISearchAvailabilityGroup = new UISearchAvailabilityGroup(this);
                }
                return this.mUISearchAvailabilityGroup;
            }
        }
        
        public UIComboBox1Window UIComboBox1Window
        {
            get
            {
                if ((this.mUIComboBox1Window == null))
                {
                    this.mUIComboBox1Window = new UIComboBox1Window(this);
                }
                return this.mUIComboBox1Window;
            }
        }
        
        public UIFilterOptionsGroup UIFilterOptionsGroup
        {
            get
            {
                if ((this.mUIFilterOptionsGroup == null))
                {
                    this.mUIFilterOptionsGroup = new UIFilterOptionsGroup(this);
                }
                return this.mUIFilterOptionsGroup;
            }
        }
        #endregion
        
        #region Fields
        private UITxtFirstNameWindow mUITxtFirstNameWindow;
        
        private UITxtLastNameWindow mUITxtLastNameWindow;
        
        private UIItem2Window mUIItem2Window;
        
        private UITxtSearchBoxWindow1 mUITxtSearchBoxWindow;
        
        private UISearchStaffGroup mUISearchStaffGroup;
        
        private UIDataGridViewX1Window mUIDataGridViewX1Window;
        
        private UISearchAvailabilityGroup mUISearchAvailabilityGroup;
        
        private UIComboBox1Window mUIComboBox1Window;
        
        private UIFilterOptionsGroup mUIFilterOptionsGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITxtFirstNameWindow : WinWindow
    {
        
        public UITxtFirstNameWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtFirstName";
            this.WindowTitles.Add("Find Staff");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtFirstNameEdit
        {
            get
            {
                if ((this.mUITxtFirstNameEdit == null))
                {
                    this.mUITxtFirstNameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtFirstNameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "*";
                    this.mUITxtFirstNameEdit.WindowTitles.Add("Find Staff");
                    #endregion
                }
                return this.mUITxtFirstNameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtFirstNameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITxtLastNameWindow : WinWindow
    {
        
        public UITxtLastNameWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtLastName";
            this.WindowTitles.Add("Find Staff");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtLastNameEdit
        {
            get
            {
                if ((this.mUITxtLastNameEdit == null))
                {
                    this.mUITxtLastNameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtLastNameEdit.WindowTitles.Add("Find Staff");
                    #endregion
                }
                return this.mUITxtLastNameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtLastNameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItem2Window : WinWindow
    {
        
        public UIItem2Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "lblID";
            this.WindowTitles.Add("Find Staff");
            #endregion
        }
        
        #region Properties
        public WinText UIItem2Text
        {
            get
            {
                if ((this.mUIItem2Text == null))
                {
                    this.mUIItem2Text = new WinText(this);
                    #region Search Criteria
                    this.mUIItem2Text.SearchProperties[WinText.PropertyNames.Name] = "2";
                    this.mUIItem2Text.WindowTitles.Add("Find Staff");
                    #endregion
                }
                return this.mUIItem2Text;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIItem2Text;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITxtSearchBoxWindow1 : WinWindow
    {
        
        public UITxtSearchBoxWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtSearchBox";
            this.WindowTitles.Add("Find Staff");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtSearchBoxEdit
        {
            get
            {
                if ((this.mUITxtSearchBoxEdit == null))
                {
                    this.mUITxtSearchBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtSearchBoxEdit.WindowTitles.Add("Find Staff");
                    #endregion
                }
                return this.mUITxtSearchBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtSearchBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISearchStaffGroup : WinGroup
    {
        
        public UISearchStaffGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Search Staff";
            this.WindowTitles.Add("Find Staff");
            #endregion
        }
        
        #region Properties
        public WinButton UISearchButton
        {
            get
            {
                if ((this.mUISearchButton == null))
                {
                    this.mUISearchButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISearchButton.SearchProperties[WinButton.PropertyNames.Name] = "Search";
                    this.mUISearchButton.WindowTitles.Add("Find Staff");
                    #endregion
                }
                return this.mUISearchButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISearchButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDataGridViewX1Window : WinWindow
    {
        
        public UIDataGridViewX1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dataGridViewX1";
            this.WindowTitles.Add("Find Staff");
            #endregion
        }
        
        #region Properties
        public UIDataGridViewTable UIDataGridViewTable
        {
            get
            {
                if ((this.mUIDataGridViewTable == null))
                {
                    this.mUIDataGridViewTable = new UIDataGridViewTable(this);
                }
                return this.mUIDataGridViewTable;
            }
        }
        #endregion
        
        #region Fields
        private UIDataGridViewTable mUIDataGridViewTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDataGridViewTable : WinTable
    {
        
        public UIDataGridViewTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTable.PropertyNames.Name] = "DataGridView";
            this.WindowTitles.Add("Find Staff");
            #endregion
        }
        
        #region Properties
        public UIRow0Row UIRow0Row
        {
            get
            {
                if ((this.mUIRow0Row == null))
                {
                    this.mUIRow0Row = new UIRow0Row(this);
                }
                return this.mUIRow0Row;
            }
        }
        #endregion
        
        #region Fields
        private UIRow0Row mUIRow0Row;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRow0Row : WinRow
    {
        
        public UIRow0Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinRow.PropertyNames.Value] = "08/03/2017;12:00:00;13:00:00";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Find Staff");
            #endregion
        }
        
        #region Properties
        public WinCell UIItem08032017Cell
        {
            get
            {
                if ((this.mUIItem08032017Cell == null))
                {
                    this.mUIItem08032017Cell = new WinCell(this);
                    #region Search Criteria
                    this.mUIItem08032017Cell.SearchProperties[WinCell.PropertyNames.Value] = "08/03/2017";
                    this.mUIItem08032017Cell.WindowTitles.Add("Find Staff");
                    #endregion
                }
                return this.mUIItem08032017Cell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIItem08032017Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISearchAvailabilityGroup : WinGroup
    {
        
        public UISearchAvailabilityGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Search Availability";
            this.WindowTitles.Add("Find Staff");
            #endregion
        }
        
        #region Properties
        public WinButton UISearchButton
        {
            get
            {
                if ((this.mUISearchButton == null))
                {
                    this.mUISearchButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISearchButton.SearchProperties[WinButton.PropertyNames.Name] = "Search";
                    this.mUISearchButton.WindowTitles.Add("Find Staff");
                    #endregion
                }
                return this.mUISearchButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISearchButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIComboBox1Window : WinWindow
    {
        
        public UIComboBox1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "comboBox1";
            this.WindowTitles.Add("Find Staff");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIItem2ComboBox
        {
            get
            {
                if ((this.mUIItem2ComboBox == null))
                {
                    this.mUIItem2ComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIItem2ComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "2";
                    this.mUIItem2ComboBox.WindowTitles.Add("Find Staff");
                    #endregion
                }
                return this.mUIItem2ComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIItem2ComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIFilterOptionsGroup : WinGroup
    {
        
        public UIFilterOptionsGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Filter Options";
            this.WindowTitles.Add("Find Staff");
            #endregion
        }
        
        #region Properties
        public WinButton UIApplyButton
        {
            get
            {
                if ((this.mUIApplyButton == null))
                {
                    this.mUIApplyButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIApplyButton.SearchProperties[WinButton.PropertyNames.Name] = "Apply";
                    this.mUIApplyButton.WindowTitles.Add("Find Staff");
                    #endregion
                }
                return this.mUIApplyButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIApplyButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIProgramManagerWindow : WinWindow
    {
        
        public UIProgramManagerWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Program Manager";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Progman";
            this.WindowTitles.Add("Program Manager");
            #endregion
        }
        
        #region Properties
        public UIFolderViewWindow UIFolderViewWindow
        {
            get
            {
                if ((this.mUIFolderViewWindow == null))
                {
                    this.mUIFolderViewWindow = new UIFolderViewWindow(this);
                }
                return this.mUIFolderViewWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIFolderViewWindow mUIFolderViewWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIFolderViewWindow : WinWindow
    {
        
        public UIFolderViewWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Program Manager");
            #endregion
        }
        
        #region Properties
        public WinList UIDesktopList
        {
            get
            {
                if ((this.mUIDesktopList == null))
                {
                    this.mUIDesktopList = new WinList(this);
                    #region Search Criteria
                    this.mUIDesktopList.SearchProperties[WinList.PropertyNames.Name] = "Desktop";
                    this.mUIDesktopList.WindowTitles.Add("Program Manager");
                    #endregion
                }
                return this.mUIDesktopList;
            }
        }
        #endregion
        
        #region Fields
        private WinList mUIDesktopList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISaveRecordWindow : WinWindow
    {
        
        public UISaveRecordWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Save Record";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Save Record");
            #endregion
        }
        
        #region Properties
        public UIYesWindow UIYesWindow
        {
            get
            {
                if ((this.mUIYesWindow == null))
                {
                    this.mUIYesWindow = new UIYesWindow(this);
                }
                return this.mUIYesWindow;
            }
        }
        
        public WinTitleBar UISaveRecordTitleBar
        {
            get
            {
                if ((this.mUISaveRecordTitleBar == null))
                {
                    this.mUISaveRecordTitleBar = new WinTitleBar(this);
                    #region Search Criteria
                    this.mUISaveRecordTitleBar.WindowTitles.Add("Save Record");
                    #endregion
                }
                return this.mUISaveRecordTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIYesWindow mUIYesWindow;
        
        private WinTitleBar mUISaveRecordTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIYesWindow : WinWindow
    {
        
        public UIYesWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "6";
            this.WindowTitles.Add("Save Record");
            #endregion
        }
        
        #region Properties
        public WinButton UIYesButton
        {
            get
            {
                if ((this.mUIYesButton == null))
                {
                    this.mUIYesButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIYesButton.SearchProperties[WinButton.PropertyNames.Name] = "Yes";
                    this.mUIYesButton.WindowTitles.Add("Save Record");
                    #endregion
                }
                return this.mUIYesButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIYesButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "OK";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Button";
            this.WindowTitles.Add("OK");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("OK");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIUnexpectederrorTheUPWindow : WinWindow
    {
        
        public UIUnexpectederrorTheUPWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = @"Unexpected error:The UPDATE statement conflicted with the FOREIGN KEY constraint ""FK_Session_Staff"". The conflict occurred in database ""D:\MY DATA\DOCUMENTS\GITHUB\SBC-SYSTEM\SBC-SYSTEM\SPHERE BOOKING AND CHECK-IN SYSTEM\BIN\DEBUG\MAINDATABASE.MDF"", table ""dbo.Staff"", column 'Id'.
The statement has been terminated.";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Static";
            this.WindowTitles.Add(@"Unexpected error:The UPDATE statement conflicted with the FOREIGN KEY constraint ""FK_Session_Staff"". The conflict occurred in database ""D:\MY DATA\DOCUMENTS\GITHUB\SBC-SYSTEM\SBC-SYSTEM\SPHERE BOOKING AND CHECK-IN SYSTEM\BIN\DEBUG\MAINDATABASE.MDF"", table ""dbo.Staff"", column 'Id'.
The statement has been terminated.");
            #endregion
        }
        
        #region Properties
        public WinText UIUnexpectederrorTheUPText
        {
            get
            {
                if ((this.mUIUnexpectederrorTheUPText == null))
                {
                    this.mUIUnexpectederrorTheUPText = new WinText(this);
                    #region Search Criteria
                    this.mUIUnexpectederrorTheUPText.SearchProperties[WinText.PropertyNames.Name] = @"Unexpected error:The UPDATE statement conflicted with the FOREIGN KEY constraint ""FK_Session_Staff"". The conflict occurred in database ""D:\MY DATA\DOCUMENTS\GITHUB\SBC-SYSTEM\SBC-SYSTEM\SPHERE BOOKING AND CHECK-IN SYSTEM\BIN\DEBUG\MAINDATABASE.MDF"", table ""dbo.Staff"", column 'Id'.The statement has been terminated.";
                    this.mUIUnexpectederrorTheUPText.WindowTitles.Add(@"Unexpected error:The UPDATE statement conflicted with the FOREIGN KEY constraint ""FK_Session_Staff"". The conflict occurred in database ""D:\MY DATA\DOCUMENTS\GITHUB\SBC-SYSTEM\SBC-SYSTEM\SPHERE BOOKING AND CHECK-IN SYSTEM\BIN\DEBUG\MAINDATABASE.MDF"", table ""dbo.Staff"", column 'Id'.
The statement has been terminated.");
                    #endregion
                }
                return this.mUIUnexpectederrorTheUPText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIUnexpectederrorTheUPText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRecordSavedWindow : WinWindow
    {
        
        public UIRecordSavedWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Record Saved";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Static";
            this.WindowTitles.Add("Record Saved");
            #endregion
        }
        
        #region Properties
        public WinText UIRecordSavedText
        {
            get
            {
                if ((this.mUIRecordSavedText == null))
                {
                    this.mUIRecordSavedText = new WinText(this);
                    #region Search Criteria
                    this.mUIRecordSavedText.SearchProperties[WinText.PropertyNames.Name] = "Record Saved";
                    this.mUIRecordSavedText.WindowTitles.Add("Record Saved");
                    #endregion
                }
                return this.mUIRecordSavedText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIRecordSavedText;
        #endregion
    }
}
